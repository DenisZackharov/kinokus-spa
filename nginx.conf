user nginx;
worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_min_length 1000;

  server {
    listen 80;
    listen 443 ssl;

    server_name kinokus.ru www.kinokus.ru;

    ssl_certificate /etc/letsencrypt/live/kinokus.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kinokus.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256";
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;

    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;

    root /usr/share/nginx/html;
    index index.html;

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }

    location / {
        try_files $uri /index.html;
    }

    location /static/ {
      root /usr/share/nginx/html;
      expires 1y;
      add_header Cache-Control "public";
    }

    location /backend/ {
      proxy_pass http://backend:3000/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    error_page 404 /404.html;
    location = /404.html {
      root /usr/share/nginx/html;
    }
  }
}

# works without ssl
# http {
#   server {
#     listen 80;
#     server_name localhost;
#     root /usr/share/nginx/html;
#     index index.html;
#     location / {
#       try_files $uri /index.html;
#     }
    # Прокси для API-запросов
    # location /backend/ {
    #   proxy_pass http://backend:3000/;
    #   proxy_http_version 1.1;
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection 'upgrade';
    #   proxy_set_header Host $host;
    #   proxy_cache_bypass $http_upgrade;
    # }
#   }
# }
